Time taken for Insertion: Lists take constant time to insert an element into them, where as vectors internally need to relocate the data present in the vector before inserting a new value if the capacity of vector is equal to number of elements present in the vector. This takes a overhead to the processor and time.
Time taken to access the data: Vectors has upper hand over lists in this aspect. Vector takes constant time to access elements present at the middle. Where as lists need to traverse through the list to reach the required element.
Memory taken by the container: The capacity and size of vector necessarily need not be same. The capacity of vector grows exponentially intern consuming more memory than actually needed by the container. Lists take exactly same memory required to store elements, hence no extra memory is allocated during allocation by which you can save memory.
